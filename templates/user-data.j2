#cloud-config

groups: 
  - candidate

users: 
  - default
  - name: candidate
    primary-group: candidate
    lock_passwd: false

# set centos or cloud-user password
password: {{ userpassword }}
# set root user password
chpasswd: 
  list: |
    root:{{ rootpassword }}
    candidate:{{ userpassword }}
  expire: False
ssh_pwauth: True

network: {config: disabled} 

# Hostname management
preserve_hostname: False
hostname: {{inventory_hostname}}
fqdn: {{inventory_hostname}}

bootcmd:
  - set -x; echo '#user-data/bootcmd:' >> /etc/sysconfig/network-scripts/ifcfg-eth0
  - set -x; sed -i -e '/^BOOTPROTO/ s/dhcp/static/g' -e '/PERSISTENT_DHCLIENT/d' /etc/sysconfig/network-scripts/ifcfg-eth0
  - set -x; echo 'IPADDR={{network_ipaddr}}' >> /etc/sysconfig/network-scripts/ifcfg-eth0
  - set -x; echo 'NETMASK={{network.netmask}}' >> /etc/sysconfig/network-scripts/ifcfg-eth0
  - set -x; echo 'GATEWAY={{network_gateway}}' >> /etc/sysconfig/network-scripts/ifcfg-eth0
  - set -x; echo 'DNS1={{dns1}}' >> /etc/sysconfig/network-scripts/ifcfg-eth0
  - set -x; echo 'ONBOOT="yes"' >> /etc/sysconfig/network-scripts/ifcfg-eth0
  - set -x; echo 'NM_CONTROLLED=no' >> /etc/sysconfig/network-scripts/ifcfg-eth0
  - ifdown eth0
  - ifup eth0

# Run command when finished with it
runcmd:
  - 'systemctl disable NetworkManager'
  - 'timedatectl set-timezone Asia/Seoul'
  - 'sed -i "/server .* iburst/d" /etc/chrony.conf'
  - 'sed -i "/^# Please consider.*$/a\server time.bora.net iburst" /etc/chrony.conf'
  - 'chmod o-rwx /usr/bin/su'
  - 'sed -i "s/^PASS_MAX_DAYS.*$/PASS_MAX_DAYS   90/" /etc/login.defs'
  - 'sed -i "s/^PASS_MIN_LEN.*$/PASS_MIN_LEN    9/" /etc/login.defs'
  - 'touch /etc/cloud/cloud-init.disabled'
  - 'systemctl disable cloud-config.service'
  - 'systemctl disable cloud-final.service'
  - 'systemctl disable cloud-init-local.service'
  - 'systemctl disable cloud-init.service'
  - 'yum install bash-completion vim *bin/netstat *bin/route -y'

# Configure where output will go
output: 
  all: ">> /var/log/cloud-init.log"

# Install my public ssh key to the first user-defined user configured 
# in cloud.cfg in the template (which is centos for CentOS cloud images)

ssh_authorized_keys:
  - {{ssh_key1}}
  - {{ssh_key2}}
  - {{ssh_key3}}

ssh_keys:
  rsa_public: "{{ ssh_key2 }}"

disable_root: 0
